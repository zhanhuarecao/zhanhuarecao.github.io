<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[本地Java代码执行服务器脚本]]></title>
      <url>%2F2017%2F04%2F25%2Fant%E6%89%93%E5%8C%85%2F</url>
      <content type="text"><![CDATA[话不多说，直接上代码： public class ExecutorShell { private Connection conn; /** 远程机器IP */ private String ip; /** 用户名 */ private String osUsername; /** 密码 */ private String password; private String charset = Charset.defaultCharset().toString(); private static final int TIME_OUT = 1000 * 5 * 60; public ExecutorShell(String ip, String usr, String pasword) { this.ip = ip; this.osUsername = usr; this.password = pasword; } //登录 private boolean login() throws IOException { conn = new Connection(ip); conn.connect(); return conn.authenticateWithPassword(osUsername, password); } //执行脚本 public List exec(String cmds) throws Exception { InputStream stdOut = null; InputStream stdErr = null; String outStr = &quot;&quot;; String outErr = &quot;&quot;; int ret = -1; ArrayList&lt;Object&gt; list = new ArrayList&lt;&gt;(); try { if (login()) { // Open a new {@link Session} on this connection Session session = conn.openSession(); // Execute a command on the remote machine. session.execCommand(cmds); stdOut = new StreamGobbler(session.getStdout()); outStr = processStream(stdOut, charset); stdErr = new StreamGobbler(session.getStderr()); outErr = processStream(stdErr, charset); session.waitForCondition(ChannelCondition.EXIT_STATUS, TIME_OUT); /* System.out.println(&quot;outStr=&quot; + outStr); System.out.println(&quot;outErr=&quot; + outErr);*/ ret = session.getExitStatus(); //将脚本执行的返回值添加到list中 list.add(ret); //将失败信息添加到list集合中 list.add(outErr); } else { throw new Exception(&quot;登录远程机器失败&quot; + ip); } } finally { if (conn != null) { conn.close(); } } return list; } //信息输出 private String processStream(InputStream in, String charset) throws Exception { byte[] buf = new byte[1024]; StringBuilder sb = new StringBuilder(); while (in.read(buf) != -1) { sb.append(new String(buf, charset)); } return sb.toString(); } public static void main(String args[]) throws Exception { ExecutorShell executor = new ExecutorShell(&quot;ip地址&quot;, &quot;登录名&quot;, &quot;密码&quot;); executor.exec(脚本路径/脚本名称); } } executor执行后，如果返回值是0，说明脚本执行成功。如果不是0，则执行失败，可从list中取出，查看失败原因。 如果，执行过程中，报“脚本没有权限的错误”，可在执行方法前先给脚本执行权限： executor.exec(&quot;chmod 777 脚本路径/脚本名称&quot;);]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[hexo+github搭建博客总结]]></title>
      <url>%2F2017%2F04%2F25%2Fhexo-github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%80%BB%E7%BB%93%2F</url>
      <content type="text"><![CDATA[最近由于由于CSDN上的博客需要手机上行验证登录，然后发现了hexo+github构建博客逼格较高。so，按照网上的帖子实践了一番，有些坑要在这里记录一下。 ####坑一：为博客添加评论由于我的主题使用的是next，而next官方文档推荐的一些第三方评论都有一些些问题。多说马上就要停服了，网易云跟帖注册的时候一直提示url或站点名称已经存在，国外的又要翻墙，新浪畅言还要备案。所以找来找去找到了友言。注册号好appkey后，本地调试没有问题，上传到GitHub上，没有显示，折腾了半天也找不到原因，无奈只得选择放弃。然后我又把目光投向来必力，一番注册后，终于成功。详细过程如下：在管理页面–代码管理中找到自己的key，即data-uid的值。复制该值，找到主题配置文件的livere_uid，放开注释，然后把key粘贴过来，clean，g，d后就可以了。 ####坑二：为博客添加分享看到别人的博客里面都有个分享，试过ShareSDK，本地调试完全正常，上传到GitHub，效果无法显示，无奈之下又试了百度分享。本地调试ok，上传到GitHub，依然无法显示，页面F12，看到div都在那里，图标及点击事件都无法显示。。。无奈只得放弃（自我安慰：反正我这腊鸡内容也没人分享，就不需要这个功能了吧）！ ####坑三：侧边栏优化为侧边栏添加显示所有的分类列表。在next/layout/_macro下的siderbar.swig添加以下代码： &lt;div class=&quot;category-page-count&quot; style=&quot;margin-top:40px;&quot;&gt; 目前共计{{ site.categories.length}}个分类 &lt;/div&gt; &lt;div class=&quot;category-all-page&quot;&gt; &lt;div class=&quot;category-all&quot;&gt; {{ list_categories({depth: 1}) }} &lt;/div&gt; &lt;/div&gt; 即可。]]></content>
    </entry>

    
  
  
</search>
